<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="../../LocalArtifacts.props" />
  <Import Project="../../TargetFrameworks.props" />

  <PropertyGroup>
    <TargetFrameworks Condition=" '$(TargetFrameworks)' == '' ">$(DefaultTargetFrameworks)</TargetFrameworks>
    <Nullable>enable</Nullable>
    <DebugType>embedded</DebugType>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <OutputPath>..\..\managed\$(Configuration)</OutputPath>

    <!-- NuGet -->
    <NoWarn>NU5128</NoWarn>
    <PackageId>SwiftUI.NET</PackageId>
    <Authors>Alex Corrado</Authors>
    <PackageOutputPath>$(ArtifactOutputPath)</PackageOutputPath>
    <PackageTags>apple;ios;macos;swiftui;swift;ui;toolkit</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="Swift\" />
    <Folder Include="SwiftUI\" />
    <Folder Include="Swift\Interop\" />
    <Folder Include="SwiftUI\Interop\" />
    <Folder Include="Mac\" />
    <Folder Include="iOS\" />
  </ItemGroup>

  <!-- Conditionally exclude platform-specific source files -->
  <ItemGroup Condition=" '$(TargetPlatformIdentifier)' != 'macos' ">
    <Compile Remove="Mac\**\*.*" />
    <None Include="Mac\**\*.*" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetPlatformIdentifier)' != 'ios' ">
    <Compile Remove="iOS\**\*.*" />
    <None Include="iOS\**\*.*" />
  </ItemGroup>

  <!-- Additional files to pack in the nuget -->
  <ItemGroup>
    <None Include="$(OutputPath)\**\SwiftUI.FSharp.dll" Pack="true" PackagePath="lib" Visible="false" />
    <None Include="..\SwiftUI.Analyzers\bin\$(Configuration)\netstandard2.0\SwiftUI.Analyzers.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Package the native library -->
    <IsBindingProject>true</IsBindingProject>
    <NoBindingEmbedding>true</NoBindingEmbedding>
  </PropertyGroup>

  <ItemGroup>
    <NativeReference Include="..\..\native\$(Configuration)\$(TargetFramework)\SwiftUIGlue.framework" Condition="Exists('..\..\native\$(Configuration)\$(TargetFramework)\SwiftUIGlue.framework')" Kind="Framework" Visible="false" />
    <NativeReference Include="..\..\native\$(Configuration)\$(TargetFramework)\*.dylib" Kind="Dynamic" Visible="false" />

    <!-- KLUDGE: We auto-generate a blank file for this -->
    <ObjcBindingApiDefinition Include="$(IntermediateOutputPath)\ApiDefinition.cs" />
  </ItemGroup>
  <Target Name="CreateDummyApiDefinition" BeforeTargets="_GenerateBindings">
    <WriteLinesToFile Lines="" File="@(ObjcBindingApiDefinition)" Condition="!Exists('@(ObjcBindingApiDefinition)')" />
  </Target>

  <!-- FIXME: Remove this workaround once we get .NET SDK 6.0.400 (see https://github.com/dotnet/msbuild/issues/4584) -->
  <PropertyGroup>
    <GenerateNuspecDependsOn>
      $(GenerateNuspecDependsOn);
      _RemoveNativeManifestFromPack;
    </GenerateNuspecDependsOn>
  </PropertyGroup>
  <Target Name="_RemoveNativeManifestFromPack">
    <ItemGroup>
      <_BuildOutputInPackage Remove="@(_BuildOutputInPackage)" Condition="'%(Filename)%(Extension)' == 'Native.SwiftUI.manifest'" />
    </ItemGroup>
  </Target>
</Project>
